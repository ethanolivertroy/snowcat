apiVersion: batch/v1
kind: Job
metadata:
  name: snowcat
  labels:
    app: snowcat
    version: v2025.3.0
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: snowcat
        security-scan: "true"
    spec:
      serviceAccountName: snowcat
      containers:
      - name: snowcat
        image: ghcr.io/praetorian-inc/snowcat:v2025.3.0
        imagePullPolicy: Always
        command:
        - "snowcat"
        - "--export=/data"
        - "--output=/data/results.json"
        - "--format=json"
        - "--log-level=debug"
        - "--job-mode"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        emptyDir: {}
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snowcat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: snowcat
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services"]
  verbs: ["get", "list"]
- apiGroups: ["networking.istio.io"]
  resources: ["gateways", "virtualservices", "destinationrules", "sidecars", "envoyfilters"]
  verbs: ["get", "list"]
- apiGroups: ["security.istio.io"]
  resources: ["authorizationpolicies", "peerauthentications", "requestauthentications"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: snowcat
subjects:
- kind: ServiceAccount
  name: snowcat
  namespace: default
roleRef:
  kind: ClusterRole
  name: snowcat
  apiGroup: rbac.authorization.k8s.io
